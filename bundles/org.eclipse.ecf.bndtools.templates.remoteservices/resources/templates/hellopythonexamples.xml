<form>
<p>This template will create a project with bndrun files to launch Python.Java Hello example</p>
<p> application and the Python.Java Protobuf Hello example application.</p>
<p>Both of these example applications expose a Java-based OSGi Remote Service to be consumed by Python code.</p>
<p>There is a bndrun file to launch both the Java Hello Example and the Java Protobuf Hello Example</p>
<p>Source code for these examples is in this repo: https://github.com/ECF/Py4j-RemoteServicesProvider</p>
<p>Once launched, enable listening by enabling component:  org.eclipse.ecf.examples.hello.provider.ExamplePy4jProvider</p>
<p>e.g. at the osgi console:</p>
<p>scr:enable org.eclipse.ecf.examples.hello.provider.ExamplePy4jProvider</p>
<p>This command should result in output:</p>
<p>...</p>
<p>Jun 14, 2018 12:15:34 PM py4j.GatewayServer fireServerStarted</p>
<p>INFO: Gateway Server Started</p>
<p>The java gateway has started listening for connections on port 23333. This port is specified in </p>
<p>org.eclipse.ecf.examples.hello.provider.ExamplePy4jProvider component source.</p>
<p>Once the gateway is started, to export a IHello impl remote service (before or after python connection), enable this component:</p>
<p>scr:enable org.eclipse.ecf.examples.hello.javahost.HelloImpl</p>
<p>If exported, this will produce endpoint description xml to the console, and the hello impl service will be available to import </p>
<p>and consumption from Python.</p>
</form>
